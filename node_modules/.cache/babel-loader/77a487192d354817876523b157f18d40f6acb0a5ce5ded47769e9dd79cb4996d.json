{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./components/Header';import Board from'./components/Board';import Login from'./components/Login';import Register from'./components/Register';import{getBoards,createBoard}from'./services/api';import socketService from'./services/socketService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[boards,setBoards]=useState([]);const[currentBoard,setCurrentBoard]=useState(null);const[loading,setLoading]=useState(true);const[showRegister,setShowRegister]=useState(false);useEffect(()=>{// Check if user is logged in\nconst savedUser=localStorage.getItem('user');if(savedUser){const userData=JSON.parse(savedUser);setUser(userData);// Connect to WebSocket\nconst token=localStorage.getItem('token');if(token){socketService.connect(token);}fetchBoards();}else{setLoading(false);}},[]);const fetchBoards=async()=>{try{const data=await getBoards();setBoards(data);if(data.length>0&&!currentBoard){setCurrentBoard(data[0]);}}catch(error){console.error('Error fetching boards:',error);}finally{setLoading(false);}};const handleLogin=userData=>{setUser(userData);fetchBoards();};const handleRegister=userData=>{setUser(userData);fetchBoards();};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');socketService.disconnect();setUser(null);setBoards([]);setCurrentBoard(null);};const handleUserUpdate=updatedUser=>{setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));};const handleCardClick=card=>{// Find the board that contains this card\nconst board=boards.find(b=>b.id===card.board_id);if(board){setCurrentBoard(board);}};const handleBoardClick=board=>{setCurrentBoard(board);};const handleCreateBoard=async(title,description)=>{try{const newBoard=await createBoard(title,description);setBoards([newBoard,...boards]);setCurrentBoard(newBoard);}catch(error){var _error$response,_error$response$data;console.error('Error creating board:',error);alert('Error creating board: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Unknown error'));}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-xl text-gray-600\",children:\"Loading...\"})});}// Show auth forms if not logged in\nif(!user){return showRegister?/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,onSwitchToLogin:()=>setShowRegister(false)}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onSwitchToRegister:()=>setShowRegister(true)});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-50\",children:[/*#__PURE__*/_jsx(Header,{user:user,boards:boards,currentBoard:currentBoard,onBoardChange:setCurrentBoard,onCreateBoard:handleCreateBoard,onLogout:handleLogout,onUserUpdate:handleUserUpdate,onCardClick:handleCardClick,onBoardClick:handleBoardClick}),currentBoard?/*#__PURE__*/_jsx(Board,{boardId:currentBoard.id}):/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-96\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-semibold text-gray-700 mb-4\",children:[\"Welcome to ToDo App, \",user.username,\"!\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-6\",children:\"Create your first board to get started\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCreateBoard('My First Board','Start organizing your tasks'),className:\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors\",children:\"Create Board\"})]})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","Board","Login","Register","getBoards","createBoard","socketService","jsx","_jsx","jsxs","_jsxs","App","user","setUser","boards","setBoards","currentBoard","setCurrentBoard","loading","setLoading","showRegister","setShowRegister","savedUser","localStorage","getItem","userData","JSON","parse","token","connect","fetchBoards","data","length","error","console","handleLogin","handleRegister","handleLogout","removeItem","disconnect","handleUserUpdate","updatedUser","setItem","stringify","handleCardClick","card","board","find","b","id","board_id","handleBoardClick","handleCreateBoard","title","description","newBoard","_error$response","_error$response$data","alert","response","className","children","onRegister","onSwitchToLogin","onLogin","onSwitchToRegister","onBoardChange","onCreateBoard","onLogout","onUserUpdate","onCardClick","onBoardClick","boardId","username","onClick"],"sources":["E:/Ngon-ngu-kich-ban/ToDo-fontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Board from './components/Board';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport { getBoards, createBoard } from './services/api';\r\nimport socketService from './services/socketService';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [boards, setBoards] = useState([]);\r\n  const [currentBoard, setCurrentBoard] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      const userData = JSON.parse(savedUser);\r\n      setUser(userData);\r\n      \r\n      // Connect to WebSocket\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        socketService.connect(token);\r\n      }\r\n      \r\n      fetchBoards();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchBoards = async () => {\r\n    try {\r\n      const data = await getBoards();\r\n      setBoards(data);\r\n      if (data.length > 0 && !currentBoard) {\r\n        setCurrentBoard(data[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching boards:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n    fetchBoards();\r\n  };\r\n\r\n  const handleRegister = (userData) => {\r\n    setUser(userData);\r\n    fetchBoards();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    socketService.disconnect();\r\n    setUser(null);\r\n    setBoards([]);\r\n    setCurrentBoard(null);\r\n  };\r\n\r\n  const handleUserUpdate = (updatedUser) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    // Find the board that contains this card\r\n    const board = boards.find(b => b.id === card.board_id);\r\n    if (board) {\r\n      setCurrentBoard(board);\r\n    }\r\n  };\r\n\r\n  const handleBoardClick = (board) => {\r\n    setCurrentBoard(board);\r\n  };\r\n\r\n  const handleCreateBoard = async (title, description) => {\r\n    try {\r\n      const newBoard = await createBoard(title, description);\r\n      setBoards([newBoard, ...boards]);\r\n      setCurrentBoard(newBoard);\r\n    } catch (error) {\r\n      console.error('Error creating board:', error);\r\n      alert('Error creating board: ' + (error.response?.data?.error || 'Unknown error'));\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-xl text-gray-600\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show auth forms if not logged in\r\n  if (!user) {\r\n    return showRegister ? (\r\n      <Register \r\n        onRegister={handleRegister}\r\n        onSwitchToLogin={() => setShowRegister(false)}\r\n      />\r\n    ) : (\r\n      <Login \r\n        onLogin={handleLogin}\r\n        onSwitchToRegister={() => setShowRegister(true)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Header \r\n        user={user}\r\n        boards={boards}\r\n        currentBoard={currentBoard}\r\n        onBoardChange={setCurrentBoard}\r\n        onCreateBoard={handleCreateBoard}\r\n        onLogout={handleLogout}\r\n        onUserUpdate={handleUserUpdate}\r\n        onCardClick={handleCardClick}\r\n        onBoardClick={handleBoardClick}\r\n      />\r\n      {currentBoard ? (\r\n        <Board boardId={currentBoard.id} />\r\n      ) : (\r\n        <div className=\"flex items-center justify-center h-96\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">\r\n              Welcome to ToDo App, {user.username}!\r\n            </h2>\r\n            <p className=\"text-gray-500 mb-6\">\r\n              Create your first board to get started\r\n            </p>\r\n            <button\r\n              onClick={() => handleCreateBoard('My First Board', 'Start organizing your tasks')}\r\n              className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors\"\r\n            >\r\n              Create Board\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}