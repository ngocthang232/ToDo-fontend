{"ast":null,"code":"import{io}from'socket.io-client';class SocketService{constructor(){this.socket=null;this.isConnected=false;}connect(token){if(this.socket&&this.isConnected){return this.socket;}this.socket=io('http://localhost:5000',{auth:{token:token}});this.socket.on('connect',()=>{console.log('Connected to WebSocket server');this.isConnected=true;});this.socket.on('disconnect',()=>{console.log('Disconnected from WebSocket server');this.isConnected=false;});this.socket.on('connect_error',error=>{console.error('WebSocket connection error:',error);this.isConnected=false;});return this.socket;}disconnect(){if(this.socket){this.socket.disconnect();this.socket=null;this.isConnected=false;}}joinBoard(boardId){if(this.socket&&this.isConnected){this.socket.emit('join-board',boardId);}}leaveBoard(boardId){if(this.socket&&this.isConnected){this.socket.emit('leave-board',boardId);}}// Card events\nemitCardUpdated(cardData){if(this.socket&&this.isConnected){this.socket.emit('card-updated',cardData);}}emitCardCreated(cardData){if(this.socket&&this.isConnected){this.socket.emit('card-created',cardData);}}emitCardDeleted(cardData){if(this.socket&&this.isConnected){this.socket.emit('card-deleted',cardData);}}// List events\nemitListUpdated(listData){if(this.socket&&this.isConnected){this.socket.emit('list-updated',listData);}}emitListCreated(listData){if(this.socket&&this.isConnected){this.socket.emit('list-created',listData);}}emitListDeleted(listData){if(this.socket&&this.isConnected){this.socket.emit('list-deleted',listData);}}// Typing indicator\nemitUserTyping(boardId,cardId,isTyping){if(this.socket&&this.isConnected){this.socket.emit('user-typing',{boardId,cardId,isTyping});}}// Event listeners\nonConnect(callback){if(this.socket){this.socket.on('connect',callback);}}onDisconnect(callback){if(this.socket){this.socket.on('disconnect',callback);}}onCardUpdated(callback){if(this.socket){this.socket.on('card-updated',callback);}}onCardCreated(callback){if(this.socket){this.socket.on('card-created',callback);}}onCardDeleted(callback){if(this.socket){this.socket.on('card-deleted',callback);}}onListUpdated(callback){if(this.socket){this.socket.on('list-updated',callback);}}onListCreated(callback){if(this.socket){this.socket.on('list-created',callback);}}onListDeleted(callback){if(this.socket){this.socket.on('list-deleted',callback);}}onUserJoined(callback){if(this.socket){this.socket.on('user-joined',callback);}}onUserLeft(callback){if(this.socket){this.socket.on('user-left',callback);}}onOnlineUsers(callback){if(this.socket){this.socket.on('online-users',callback);}}onUserTyping(callback){if(this.socket){this.socket.on('user-typing',callback);}}// Remove event listeners\noffCardUpdated(callback){if(this.socket){this.socket.off('card-updated',callback);}}offCardCreated(callback){if(this.socket){this.socket.off('card-created',callback);}}offCardDeleted(callback){if(this.socket){this.socket.off('card-deleted',callback);}}offListUpdated(callback){if(this.socket){this.socket.off('list-updated',callback);}}offListCreated(callback){if(this.socket){this.socket.off('list-created',callback);}}offListDeleted(callback){if(this.socket){this.socket.off('list-deleted',callback);}}offUserJoined(callback){if(this.socket){this.socket.off('user-joined',callback);}}offUserLeft(callback){if(this.socket){this.socket.off('user-left',callback);}}offOnlineUsers(callback){if(this.socket){this.socket.off('online-users',callback);}}offUserTyping(callback){if(this.socket){this.socket.off('user-typing',callback);}}}// Create a singleton instance\nconst socketService=new SocketService();export default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","connect","token","auth","on","console","log","error","disconnect","joinBoard","boardId","emit","leaveBoard","emitCardUpdated","cardData","emitCardCreated","emitCardDeleted","emitListUpdated","listData","emitListCreated","emitListDeleted","emitUserTyping","cardId","isTyping","onConnect","callback","onDisconnect","onCardUpdated","onCardCreated","onCardDeleted","onListUpdated","onListCreated","onListDeleted","onUserJoined","onUserLeft","onOnlineUsers","onUserTyping","offCardUpdated","off","offCardCreated","offCardDeleted","offListUpdated","offListCreated","offListDeleted","offUserJoined","offUserLeft","offOnlineUsers","offUserTyping","socketService"],"sources":["E:/Ngon-ngu-kich-ban/ToDo-fontend/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  connect(token) {\r\n    if (this.socket && this.isConnected) {\r\n      return this.socket;\r\n    }\r\n\r\n    this.socket = io('http://localhost:5000', {\r\n      auth: {\r\n        token: token\r\n      }\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n      this.isConnected = true;\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from WebSocket server');\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('WebSocket connection error:', error);\r\n      this.isConnected = false;\r\n    });\r\n\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  joinBoard(boardId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('join-board', boardId);\r\n    }\r\n  }\r\n\r\n  leaveBoard(boardId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('leave-board', boardId);\r\n    }\r\n  }\r\n\r\n  // Card events\r\n  emitCardUpdated(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-updated', cardData);\r\n    }\r\n  }\r\n\r\n  emitCardCreated(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-created', cardData);\r\n    }\r\n  }\r\n\r\n  emitCardDeleted(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-deleted', cardData);\r\n    }\r\n  }\r\n\r\n  // List events\r\n  emitListUpdated(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-updated', listData);\r\n    }\r\n  }\r\n\r\n  emitListCreated(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-created', listData);\r\n    }\r\n  }\r\n\r\n  emitListDeleted(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-deleted', listData);\r\n    }\r\n  }\r\n\r\n  // Typing indicator\r\n  emitUserTyping(boardId, cardId, isTyping) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('user-typing', {\r\n        boardId,\r\n        cardId,\r\n        isTyping\r\n      });\r\n    }\r\n  }\r\n\r\n  // Event listeners\r\n  onConnect(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('connect', callback);\r\n    }\r\n  }\r\n\r\n  onDisconnect(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('disconnect', callback);\r\n    }\r\n  }\r\n  onCardUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-updated', callback);\r\n    }\r\n  }\r\n\r\n  onCardCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-created', callback);\r\n    }\r\n  }\r\n\r\n  onCardDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-deleted', callback);\r\n    }\r\n  }\r\n\r\n  onListUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-updated', callback);\r\n    }\r\n  }\r\n\r\n  onListCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-created', callback);\r\n    }\r\n  }\r\n\r\n  onListDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-deleted', callback);\r\n    }\r\n  }\r\n\r\n  onUserJoined(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-joined', callback);\r\n    }\r\n  }\r\n\r\n  onUserLeft(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-left', callback);\r\n    }\r\n  }\r\n\r\n  onOnlineUsers(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('online-users', callback);\r\n    }\r\n  }\r\n\r\n  onUserTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-typing', callback);\r\n    }\r\n  }\r\n\r\n  // Remove event listeners\r\n  offCardUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-updated', callback);\r\n    }\r\n  }\r\n\r\n  offCardCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-created', callback);\r\n    }\r\n  }\r\n\r\n  offCardDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-deleted', callback);\r\n    }\r\n  }\r\n\r\n  offListUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-updated', callback);\r\n    }\r\n  }\r\n\r\n  offListCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-created', callback);\r\n    }\r\n  }\r\n\r\n  offListDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-deleted', callback);\r\n    }\r\n  }\r\n\r\n  offUserJoined(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-joined', callback);\r\n    }\r\n  }\r\n\r\n  offUserLeft(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-left', callback);\r\n    }\r\n  }\r\n\r\n  offOnlineUsers(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('online-users', callback);\r\n    }\r\n  }\r\n\r\n  offUserTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-typing', callback);\r\n    }\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nconst socketService = new SocketService();\r\nexport default socketService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}