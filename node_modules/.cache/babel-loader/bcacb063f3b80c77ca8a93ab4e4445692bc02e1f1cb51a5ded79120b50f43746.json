{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Boards API\nexport const getBoards = async () => {\n  const response = await api.get('/boards');\n  return response.data;\n};\nexport const createBoard = async (title, description) => {\n  const response = await api.post('/boards', {\n    title,\n    description\n  });\n  return response.data;\n};\nexport const updateBoard = async (id, title, description) => {\n  const response = await api.put(`/boards/${id}`, {\n    title,\n    description\n  });\n  return response.data;\n};\nexport const deleteBoard = async id => {\n  const response = await api.delete(`/boards/${id}`);\n  return response.data;\n};\n\n// Lists API\nexport const getLists = async boardId => {\n  const response = await api.get(`/boards/${boardId}/lists`);\n  return response.data;\n};\nexport const createList = async (boardId, title) => {\n  const response = await api.post(`/boards/${boardId}/lists`, {\n    title\n  });\n  return response.data;\n};\nexport const updateList = async (id, title) => {\n  const response = await api.put(`/lists/${id}`, {\n    title\n  });\n  return response.data;\n};\nexport const deleteList = async id => {\n  const response = await api.delete(`/lists/${id}`);\n  return response.data;\n};\n\n// Cards API\nexport const getCards = async listId => {\n  const response = await api.get(`/lists/${listId}/cards`);\n  return response.data;\n};\nexport const createCard = async (listId, title, description) => {\n  const response = await api.post(`/lists/${listId}/cards`, {\n    title,\n    description\n  });\n  return response.data;\n};\nexport const updateCard = async (id, title, description) => {\n  const response = await api.put(`/cards/${id}`, {\n    title,\n    description\n  });\n  return response.data;\n};\nexport const deleteCard = async id => {\n  const response = await api.delete(`/cards/${id}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","status","removeItem","window","location","href","Promise","reject","getBoards","get","data","createBoard","title","description","post","updateBoard","id","put","deleteBoard","delete","getLists","boardId","createList","updateList","deleteList","getCards","listId","createCard","updateCard","deleteCard"],"sources":["E:/NgonNguKichBan/ToDo_FontEnd/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Boards API\r\nexport const getBoards = async () => {\r\n  const response = await api.get('/boards');\r\n  return response.data;\r\n};\r\n\r\nexport const createBoard = async (title, description) => {\r\n  const response = await api.post('/boards', { title, description });\r\n  return response.data;\r\n};\r\n\r\nexport const updateBoard = async (id, title, description) => {\r\n  const response = await api.put(`/boards/${id}`, { title, description });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteBoard = async (id) => {\r\n  const response = await api.delete(`/boards/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Lists API\r\nexport const getLists = async (boardId) => {\r\n  const response = await api.get(`/boards/${boardId}/lists`);\r\n  return response.data;\r\n};\r\n\r\nexport const createList = async (boardId, title) => {\r\n  const response = await api.post(`/boards/${boardId}/lists`, { title });\r\n  return response.data;\r\n};\r\n\r\nexport const updateList = async (id, title) => {\r\n  const response = await api.put(`/lists/${id}`, { title });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteList = async (id) => {\r\n  const response = await api.delete(`/lists/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Cards API\r\nexport const getCards = async (listId) => {\r\n  const response = await api.get(`/lists/${listId}/cards`);\r\n  return response.data;\r\n};\r\n\r\nexport const createCard = async (listId, title, description) => {\r\n  const response = await api.post(`/lists/${listId}/cards`, { title, description });\r\n  return response.data;\r\n};\r\n\r\nexport const updateCard = async (id, title, description) => {\r\n  const response = await api.put(`/cards/${id}`, { title, description });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteCard = async (id) => {\r\n  const response = await api.delete(`/cards/${id}`);\r\n  return response.data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}