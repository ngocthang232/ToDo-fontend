{"ast":null,"code":"import _objectSpread from\"E:/Ngon-ngu-kich-ban/ToDo-fontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{DndContext,closestCenter,KeyboardSensor,PointerSensor,useSensor,useSensors}from'@dnd-kit/core';import{arrayMove,SortableContext,sortableKeyboardCoordinates,verticalListSortingStrategy,horizontalListSortingStrategy}from'@dnd-kit/sortable';import SortableList from'./SortableList';import{getLists,createList,updateListPositions}from'../services/api';import socketService from'../services/socketService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Board=_ref=>{let{boardId}=_ref;const[lists,setLists]=useState([]);const[loading,setLoading]=useState(true);const[showAddList,setShowAddList]=useState(false);const[newListTitle,setNewListTitle]=useState('');const sensors=useSensors(useSensor(PointerSensor),useSensor(KeyboardSensor,{coordinateGetter:sortableKeyboardCoordinates}));useEffect(()=>{if(boardId){fetchLists();// Set up WebSocket listeners for real-time updates\nconst handleListCreated=data=>{if(data.boardId===boardId){setLists(prev=>[...prev,data.list]);}};const handleListUpdated=data=>{if(data.boardId===boardId){setLists(prev=>prev.map(list=>list.id===data.list.id?_objectSpread(_objectSpread({},list),data.list):list));}};const handleListDeleted=data=>{if(data.boardId===boardId){setLists(prev=>prev.filter(list=>list.id!==data.listId));}};// Set up listeners\nsocketService.onListCreated(handleListCreated);socketService.onListUpdated(handleListUpdated);socketService.onListDeleted(handleListDeleted);// Cleanup\nreturn()=>{socketService.offListCreated(handleListCreated);socketService.offListUpdated(handleListUpdated);socketService.offListDeleted(handleListDeleted);};}},[boardId]);const fetchLists=async()=>{try{setLoading(true);const data=await getLists(boardId);setLists(data);}catch(error){console.error('Error fetching lists:',error);}finally{setLoading(false);}};const[listErrors,setListErrors]=useState({});const validateListForm=()=>{const newErrors={};if(!newListTitle.trim()){newErrors.title='List title is required';}else if(newListTitle.length>50){newErrors.title='List title must be less than 50 characters';}setListErrors(newErrors);return Object.keys(newErrors).length===0;};const handleCreateList=async e=>{e.preventDefault();if(validateListForm()){try{const newList=await createList(boardId,newListTitle.trim());setLists([...lists,newList]);setNewListTitle('');setListErrors({});setShowAddList(false);// Emit WebSocket event for real-time collaboration\nsocketService.emitListCreated({boardId,list:newList});}catch(error){var _error$response,_error$response$data;console.error('Error creating list:',error);setListErrors({general:'Error creating list: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Unknown error')});}}};const handleListInputChange=value=>{setNewListTitle(value);if(listErrors.title){setListErrors(_objectSpread(_objectSpread({},listErrors),{},{title:''}));}};const handleDeleteList=listId=>{setLists(lists.filter(list=>list.id!==listId));};const handleDragEnd=async event=>{const{active,over}=event;if(active.id!==over.id){const oldIndex=lists.findIndex(list=>list.id===active.id);const newIndex=lists.findIndex(list=>list.id===over.id);const newLists=arrayMove(lists,oldIndex,newIndex);setLists(newLists);// Update positions in database\ntry{const updatedLists=newLists.map((list,index)=>({id:list.id,position:index}));await updateListPositions(updatedLists);}catch(error){console.error('Error updating list positions:',error);// Revert on error\nsetLists(lists);}}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-gray-600\",children:\"Loading board...\"})});}return/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 p-6\",children:/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex overflow-x-auto space-x-4 pb-4\",children:[/*#__PURE__*/_jsx(SortableContext,{items:lists.map(list=>list.id),strategy:horizontalListSortingStrategy,children:lists.map(list=>/*#__PURE__*/_jsx(SortableList,{list:list,onDelete:()=>handleDeleteList(list.id)},list.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 w-72\",children:showAddList?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateList,className:\"bg-gray-100 rounded-lg p-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newListTitle,onChange:e=>handleListInputChange(e.target.value),placeholder:\"Enter list title...\",className:\"w-full p-2 border rounded focus:outline-none focus:ring-2 \".concat(listErrors.title?'border-red-500 focus:ring-red-500':'border-gray-300 focus:ring-blue-500'),autoFocus:true}),listErrors.title&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:listErrors.title}),listErrors.general&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:listErrors.general}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mt-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600 transition-colors\",children:\"Add List\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>{setShowAddList(false);setNewListTitle('');setListErrors({});},className:\"text-gray-600 px-3 py-1 rounded text-sm hover:text-gray-800 transition-colors\",children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAddList(true),className:\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 py-3 px-4 rounded-lg transition-colors flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg mr-2\",children:\"+\"}),\"Add a list\"]})})]})})});};export default Board;","map":{"version":3,"names":["React","useState","useEffect","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","verticalListSortingStrategy","horizontalListSortingStrategy","SortableList","getLists","createList","updateListPositions","socketService","jsx","_jsx","jsxs","_jsxs","Board","_ref","boardId","lists","setLists","loading","setLoading","showAddList","setShowAddList","newListTitle","setNewListTitle","sensors","coordinateGetter","fetchLists","handleListCreated","data","prev","list","handleListUpdated","map","id","_objectSpread","handleListDeleted","filter","listId","onListCreated","onListUpdated","onListDeleted","offListCreated","offListUpdated","offListDeleted","error","console","listErrors","setListErrors","validateListForm","newErrors","trim","title","length","Object","keys","handleCreateList","e","preventDefault","newList","emitListCreated","_error$response","_error$response$data","general","response","handleListInputChange","value","handleDeleteList","handleDragEnd","event","active","over","oldIndex","findIndex","newIndex","newLists","updatedLists","index","position","className","children","collisionDetection","onDragEnd","items","strategy","onDelete","onSubmit","type","onChange","target","placeholder","concat","autoFocus","onClick"],"sources":["E:/Ngon-ngu-kich-ban/ToDo-fontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, verticalListSortingStrategy, horizontalListSortingStrategy } from '@dnd-kit/sortable';\r\nimport SortableList from './SortableList';\r\nimport { getLists, createList, updateListPositions } from '../services/api';\r\nimport socketService from '../services/socketService';\r\n\r\nconst Board = ({ boardId }) => {\r\n  const [lists, setLists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showAddList, setShowAddList] = useState(false);\r\n  const [newListTitle, setNewListTitle] = useState('');\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (boardId) {\r\n      fetchLists();\r\n      \r\n      // Set up WebSocket listeners for real-time updates\r\n      const handleListCreated = (data) => {\r\n        if (data.boardId === boardId) {\r\n          setLists(prev => [...prev, data.list]);\r\n        }\r\n      };\r\n\r\n      const handleListUpdated = (data) => {\r\n        if (data.boardId === boardId) {\r\n          setLists(prev => prev.map(list => \r\n            list.id === data.list.id ? { ...list, ...data.list } : list\r\n          ));\r\n        }\r\n      };\r\n\r\n      const handleListDeleted = (data) => {\r\n        if (data.boardId === boardId) {\r\n          setLists(prev => prev.filter(list => list.id !== data.listId));\r\n        }\r\n      };\r\n\r\n      // Set up listeners\r\n      socketService.onListCreated(handleListCreated);\r\n      socketService.onListUpdated(handleListUpdated);\r\n      socketService.onListDeleted(handleListDeleted);\r\n\r\n      // Cleanup\r\n      return () => {\r\n        socketService.offListCreated(handleListCreated);\r\n        socketService.offListUpdated(handleListUpdated);\r\n        socketService.offListDeleted(handleListDeleted);\r\n      };\r\n    }\r\n  }, [boardId]);\r\n\r\n  const fetchLists = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getLists(boardId);\r\n      setLists(data);\r\n    } catch (error) {\r\n      console.error('Error fetching lists:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const [listErrors, setListErrors] = useState({});\r\n\r\n  const validateListForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!newListTitle.trim()) {\r\n      newErrors.title = 'List title is required';\r\n    } else if (newListTitle.length > 50) {\r\n      newErrors.title = 'List title must be less than 50 characters';\r\n    }\r\n    \r\n    setListErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleCreateList = async (e) => {\r\n    e.preventDefault();\r\n    if (validateListForm()) {\r\n      try {\r\n        const newList = await createList(boardId, newListTitle.trim());\r\n        setLists([...lists, newList]);\r\n        setNewListTitle('');\r\n        setListErrors({});\r\n        setShowAddList(false);\r\n        \r\n        // Emit WebSocket event for real-time collaboration\r\n        socketService.emitListCreated({\r\n          boardId,\r\n          list: newList\r\n        });\r\n      } catch (error) {\r\n        console.error('Error creating list:', error);\r\n        setListErrors({ general: 'Error creating list: ' + (error.response?.data?.error || 'Unknown error') });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleListInputChange = (value) => {\r\n    setNewListTitle(value);\r\n    if (listErrors.title) {\r\n      setListErrors({ ...listErrors, title: '' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteList = (listId) => {\r\n    setLists(lists.filter(list => list.id !== listId));\r\n  };\r\n\r\n  const handleDragEnd = async (event) => {\r\n    const { active, over } = event;\r\n\r\n    if (active.id !== over.id) {\r\n      const oldIndex = lists.findIndex(list => list.id === active.id);\r\n      const newIndex = lists.findIndex(list => list.id === over.id);\r\n\r\n      const newLists = arrayMove(lists, oldIndex, newIndex);\r\n      setLists(newLists);\r\n\r\n      // Update positions in database\r\n      try {\r\n        const updatedLists = newLists.map((list, index) => ({\r\n          id: list.id,\r\n          position: index\r\n        }));\r\n        await updateListPositions(updatedLists);\r\n      } catch (error) {\r\n        console.error('Error updating list positions:', error);\r\n        // Revert on error\r\n        setLists(lists);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"text-lg text-gray-600\">Loading board...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-1 p-6\">\r\n      <DndContext\r\n        sensors={sensors}\r\n        collisionDetection={closestCenter}\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        <div className=\"flex overflow-x-auto space-x-4 pb-4\">\r\n          <SortableContext items={lists.map(list => list.id)} strategy={horizontalListSortingStrategy}>\r\n            {lists.map((list) => (\r\n              <SortableList\r\n                key={list.id}\r\n                list={list}\r\n                onDelete={() => handleDeleteList(list.id)}\r\n              />\r\n            ))}\r\n          </SortableContext>\r\n          \r\n          {/* Add List Form */}\r\n          <div className=\"flex-shrink-0 w-72\">\r\n          {showAddList ? (\r\n            <form onSubmit={handleCreateList} className=\"bg-gray-100 rounded-lg p-3\">\r\n              <input\r\n                type=\"text\"\r\n                value={newListTitle}\r\n                onChange={(e) => handleListInputChange(e.target.value)}\r\n                placeholder=\"Enter list title...\"\r\n                className={`w-full p-2 border rounded focus:outline-none focus:ring-2 ${\r\n                  listErrors.title \r\n                    ? 'border-red-500 focus:ring-red-500' \r\n                    : 'border-gray-300 focus:ring-blue-500'\r\n                }`}\r\n                autoFocus\r\n              />\r\n              {listErrors.title && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{listErrors.title}</p>\r\n              )}\r\n              {listErrors.general && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{listErrors.general}</p>\r\n              )}\r\n              <div className=\"flex justify-between mt-2\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600 transition-colors\"\r\n                >\r\n                  Add List\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setShowAddList(false);\r\n                    setNewListTitle('');\r\n                    setListErrors({});\r\n                  }}\r\n                  className=\"text-gray-600 px-3 py-1 rounded text-sm hover:text-gray-800 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n            ) : (\r\n              <button\r\n                onClick={() => setShowAddList(true)}\r\n                className=\"w-full bg-gray-200 hover:bg-gray-300 text-gray-700 py-3 px-4 rounded-lg transition-colors flex items-center justify-center\"\r\n              >\r\n                <span className=\"text-lg mr-2\">+</span>\r\n                Add a list\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </DndContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}