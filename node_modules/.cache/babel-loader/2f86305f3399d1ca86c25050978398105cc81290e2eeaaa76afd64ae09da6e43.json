{"ast":null,"code":"import { io } from 'socket.io-client';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n  }\n  connect(token) {\n    if (this.socket && this.isConnected) {\n      return this.socket;\n    }\n    this.socket = io('http://localhost:5000', {\n      auth: {\n        token: token\n      }\n    });\n    this.socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n      this.isConnected = true;\n    });\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n      this.isConnected = false;\n    });\n    this.socket.on('connect_error', error => {\n      console.error('WebSocket connection error:', error);\n      this.isConnected = false;\n    });\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n  joinBoard(boardId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join-board', boardId);\n    }\n  }\n  leaveBoard(boardId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('leave-board', boardId);\n    }\n  }\n\n  // Card events\n  emitCardUpdated(cardData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('card-updated', cardData);\n    }\n  }\n  emitCardCreated(cardData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('card-created', cardData);\n    }\n  }\n  emitCardDeleted(cardData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('card-deleted', cardData);\n    }\n  }\n\n  // List events\n  emitListUpdated(listData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('list-updated', listData);\n    }\n  }\n  emitListCreated(listData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('list-created', listData);\n    }\n  }\n  emitListDeleted(listData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('list-deleted', listData);\n    }\n  }\n\n  // Typing indicator\n  emitUserTyping(boardId, cardId, isTyping) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('user-typing', {\n        boardId,\n        cardId,\n        isTyping\n      });\n    }\n  }\n\n  // Event listeners\n  onCardUpdated(callback) {\n    if (this.socket) {\n      this.socket.on('card-updated', callback);\n    }\n  }\n  onCardCreated(callback) {\n    if (this.socket) {\n      this.socket.on('card-created', callback);\n    }\n  }\n  onCardDeleted(callback) {\n    if (this.socket) {\n      this.socket.on('card-deleted', callback);\n    }\n  }\n  onListUpdated(callback) {\n    if (this.socket) {\n      this.socket.on('list-updated', callback);\n    }\n  }\n  onListCreated(callback) {\n    if (this.socket) {\n      this.socket.on('list-created', callback);\n    }\n  }\n  onListDeleted(callback) {\n    if (this.socket) {\n      this.socket.on('list-deleted', callback);\n    }\n  }\n  onUserJoined(callback) {\n    if (this.socket) {\n      this.socket.on('user-joined', callback);\n    }\n  }\n  onUserLeft(callback) {\n    if (this.socket) {\n      this.socket.on('user-left', callback);\n    }\n  }\n  onUserTyping(callback) {\n    if (this.socket) {\n      this.socket.on('user-typing', callback);\n    }\n  }\n\n  // Remove event listeners\n  offCardUpdated(callback) {\n    if (this.socket) {\n      this.socket.off('card-updated', callback);\n    }\n  }\n  offCardCreated(callback) {\n    if (this.socket) {\n      this.socket.off('card-created', callback);\n    }\n  }\n  offCardDeleted(callback) {\n    if (this.socket) {\n      this.socket.off('card-deleted', callback);\n    }\n  }\n  offListUpdated(callback) {\n    if (this.socket) {\n      this.socket.off('list-updated', callback);\n    }\n  }\n  offListCreated(callback) {\n    if (this.socket) {\n      this.socket.off('list-created', callback);\n    }\n  }\n  offListDeleted(callback) {\n    if (this.socket) {\n      this.socket.off('list-deleted', callback);\n    }\n  }\n  offUserJoined(callback) {\n    if (this.socket) {\n      this.socket.off('user-joined', callback);\n    }\n  }\n  offUserLeft(callback) {\n    if (this.socket) {\n      this.socket.off('user-left', callback);\n    }\n  }\n  offUserTyping(callback) {\n    if (this.socket) {\n      this.socket.off('user-typing', callback);\n    }\n  }\n}\n\n// Create a singleton instance\nconst socketService = new SocketService();\nexport default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","isConnected","connect","token","auth","on","console","log","error","disconnect","joinBoard","boardId","emit","leaveBoard","emitCardUpdated","cardData","emitCardCreated","emitCardDeleted","emitListUpdated","listData","emitListCreated","emitListDeleted","emitUserTyping","cardId","isTyping","onCardUpdated","callback","onCardCreated","onCardDeleted","onListUpdated","onListCreated","onListDeleted","onUserJoined","onUserLeft","onUserTyping","offCardUpdated","off","offCardCreated","offCardDeleted","offListUpdated","offListCreated","offListDeleted","offUserJoined","offUserLeft","offUserTyping","socketService"],"sources":["E:/NgonNguKichBan/ToDo_FontEnd/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n  }\r\n\r\n  connect(token) {\r\n    if (this.socket && this.isConnected) {\r\n      return this.socket;\r\n    }\r\n\r\n    this.socket = io('http://localhost:5000', {\r\n      auth: {\r\n        token: token\r\n      }\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n      this.isConnected = true;\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from WebSocket server');\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('WebSocket connection error:', error);\r\n      this.isConnected = false;\r\n    });\r\n\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  joinBoard(boardId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('join-board', boardId);\r\n    }\r\n  }\r\n\r\n  leaveBoard(boardId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('leave-board', boardId);\r\n    }\r\n  }\r\n\r\n  // Card events\r\n  emitCardUpdated(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-updated', cardData);\r\n    }\r\n  }\r\n\r\n  emitCardCreated(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-created', cardData);\r\n    }\r\n  }\r\n\r\n  emitCardDeleted(cardData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('card-deleted', cardData);\r\n    }\r\n  }\r\n\r\n  // List events\r\n  emitListUpdated(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-updated', listData);\r\n    }\r\n  }\r\n\r\n  emitListCreated(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-created', listData);\r\n    }\r\n  }\r\n\r\n  emitListDeleted(listData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('list-deleted', listData);\r\n    }\r\n  }\r\n\r\n  // Typing indicator\r\n  emitUserTyping(boardId, cardId, isTyping) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('user-typing', {\r\n        boardId,\r\n        cardId,\r\n        isTyping\r\n      });\r\n    }\r\n  }\r\n\r\n  // Event listeners\r\n  onCardUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-updated', callback);\r\n    }\r\n  }\r\n\r\n  onCardCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-created', callback);\r\n    }\r\n  }\r\n\r\n  onCardDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('card-deleted', callback);\r\n    }\r\n  }\r\n\r\n  onListUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-updated', callback);\r\n    }\r\n  }\r\n\r\n  onListCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-created', callback);\r\n    }\r\n  }\r\n\r\n  onListDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('list-deleted', callback);\r\n    }\r\n  }\r\n\r\n  onUserJoined(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-joined', callback);\r\n    }\r\n  }\r\n\r\n  onUserLeft(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-left', callback);\r\n    }\r\n  }\r\n\r\n  onUserTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('user-typing', callback);\r\n    }\r\n  }\r\n\r\n  // Remove event listeners\r\n  offCardUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-updated', callback);\r\n    }\r\n  }\r\n\r\n  offCardCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-created', callback);\r\n    }\r\n  }\r\n\r\n  offCardDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('card-deleted', callback);\r\n    }\r\n  }\r\n\r\n  offListUpdated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-updated', callback);\r\n    }\r\n  }\r\n\r\n  offListCreated(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-created', callback);\r\n    }\r\n  }\r\n\r\n  offListDeleted(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('list-deleted', callback);\r\n    }\r\n  }\r\n\r\n  offUserJoined(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-joined', callback);\r\n    }\r\n  }\r\n\r\n  offUserLeft(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-left', callback);\r\n    }\r\n  }\r\n\r\n  offUserTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.off('user-typing', callback);\r\n    }\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nconst socketService = new SocketService();\r\nexport default socketService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}