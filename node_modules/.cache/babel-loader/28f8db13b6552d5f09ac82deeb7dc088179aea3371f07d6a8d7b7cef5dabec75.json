{"ast":null,"code":"var _jsxFileName = \"E:\\\\NgonNguKichBan\\\\ToDo_FontEnd\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Board from './components/Board';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getBoards, createBoard } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [boards, setBoards] = useState([]);\n  const [currentBoard, setCurrentBoard] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showRegister, setShowRegister] = useState(false);\n  useEffect(() => {\n    fetchBoards();\n  }, []);\n  const fetchBoards = async () => {\n    try {\n      const data = await getBoards();\n      setBoards(data);\n      if (data.length > 0 && !currentBoard) {\n        setCurrentBoard(data[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching boards:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateBoard = async (title, description) => {\n    try {\n      const newBoard = await createBoard(title, description);\n      setBoards([newBoard, ...boards]);\n      setCurrentBoard(newBoard);\n    } catch (error) {\n      console.error('Error creating board:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl text-gray-600\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      boards: boards,\n      currentBoard: currentBoard,\n      onBoardChange: setCurrentBoard,\n      onCreateBoard: handleCreateBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), currentBoard ? /*#__PURE__*/_jsxDEV(Board, {\n      boardId: currentBoard.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-96\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-700 mb-4\",\n          children: \"Welcome to ToDo App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-6\",\n          children: \"Create your first board to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCreateBoard('My First Board', 'Start organizing your tasks'),\n          className: \"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"Create Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A6rZSmXS73nQ4Q8q1xjKYxjYFeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Board","Login","Register","getBoards","createBoard","jsxDEV","_jsxDEV","App","_s","user","setUser","boards","setBoards","currentBoard","setCurrentBoard","loading","setLoading","showRegister","setShowRegister","fetchBoards","data","length","error","console","handleCreateBoard","title","description","newBoard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBoardChange","onCreateBoard","boardId","id","onClick","_c","$RefreshReg$"],"sources":["E:/NgonNguKichBan/ToDo_FontEnd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Board from './components/Board';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport { getBoards, createBoard } from './services/api';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [boards, setBoards] = useState([]);\r\n  const [currentBoard, setCurrentBoard] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBoards();\r\n  }, []);\r\n\r\n  const fetchBoards = async () => {\r\n    try {\r\n      const data = await getBoards();\r\n      setBoards(data);\r\n      if (data.length > 0 && !currentBoard) {\r\n        setCurrentBoard(data[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching boards:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateBoard = async (title, description) => {\r\n    try {\r\n      const newBoard = await createBoard(title, description);\r\n      setBoards([newBoard, ...boards]);\r\n      setCurrentBoard(newBoard);\r\n    } catch (error) {\r\n      console.error('Error creating board:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-xl text-gray-600\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Header \r\n        boards={boards}\r\n        currentBoard={currentBoard}\r\n        onBoardChange={setCurrentBoard}\r\n        onCreateBoard={handleCreateBoard}\r\n      />\r\n      {currentBoard ? (\r\n        <Board boardId={currentBoard.id} />\r\n      ) : (\r\n        <div className=\"flex items-center justify-center h-96\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">\r\n              Welcome to ToDo App\r\n            </h2>\r\n            <p className=\"text-gray-500 mb-6\">\r\n              Create your first board to get started\r\n            </p>\r\n            <button\r\n              onClick={() => handleCreateBoard('My First Board', 'Start organizing your tasks')}\r\n              className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors\"\r\n            >\r\n              Create Board\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}